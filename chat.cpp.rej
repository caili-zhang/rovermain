diff a/chat.cpp b/chat.cpp	(rejected hunks)
@@ -12,8 +12,6 @@
 #include "utils.h"
 using namespace std;
 
-//20170630マルチ�Eズ追加チャチE��プログラム
-//斁E���E委を受けとるserverのセチE��アチE�E
 //Send�N���X�͑���Ƀ��b�Z�[�W��������܂Ŏ��s�����B
 //����ꂽ��sock����ďI���A���݂͑����Ȃ��ƃv���O�����̏I�����ł��Ȃ��Ȃ�B
 bool Send::onInit(const struct timespec& time)
@@ -21,11 +19,10 @@
 	return true;
 }
 
-//何度も接続要求受付を試みめE
+//���M�N���X
 void Send::onUpdate(const struct timespec& time)
 {
 }
-//sock操作を一端終亁E��電力消費軽減らしい�E�！E
 void Send::onClean()
 {
 }
@@ -66,15 +53,15 @@
 //		}
 	}
   else {
-	  Debug::print(LOG_PRINT, "chat_s              : show chat state\r\n\
-chat_s sen: send messeage to client\r\n\"");
+	  Debug::print(LOG_PRINT, "chat              : show chat state\r\n\
+chat sen: send messeage to client\r\n\"");
 	  return true;
   }
 }
 
 Send::Send()
 {
-	setName("chat_s");
+	setName("chat");
 	setPriority(TASK_PRIORITY_SEND, TASK_INTERVAL_SEND);
 }
 
@@ -103,31 +90,19 @@
 	{
 		if (args[1].compare("rec") == 0)
 		{
-			/* ソケチE��の作�E */
 			sock = socket(AF_INET, SOCK_STREAM, 0);
-			//�����܂ł͓����Ă���
-			Debug::print(LOG_PRINT, "Buzzer is already stopping\r\n");
-			/* 接続�E持E��用構造体�E準備 */
 			server.sin_family = AF_INET;
 			server.sin_port = htons(12345);
 			server.sin_addr.s_addr = inet_addr("10.0.0.12");
-
-			/* サーバに接綁E*/
 			connect(sock, (struct sockaddr *)&server, sizeof(server));
-
-			/* サーバからデータを受信 */
 			memset(buf, 0, sizeof(buf));
-			//�����܂œ����Ă���
-			Debug::print(LOG_PRINT, "Buzzer is already stopping\r\n");
 			n = read(sock, buf, sizeof(buf));
 			if (n < 0) {
 				perror("read");
-				printf("相手�Eプログラムから何も送られてきてなぁE��");
+				printf("���肪���M�v���O������N�����ĂȂ���");
 				return 1;
 			}
-			Debug::print(LOG_PRINT, "Buzzer is already stopping\r\n");
 			Debug::print(LOG_PRINT,"%d, %s\n", n, buf);
-			/* socketの終亁E*/
 			close(sock);
 			return true;
 		}
@@ -135,16 +110,15 @@
 		return false;
 	}
 	else {
-		Debug::print(LOG_PRINT, "chat_r              : show chat state\r\n\
-chat_r rec: recieve message from server\r\n\"");
+		Debug::print(LOG_PRINT, "chat              : show chat state\r\n\
+chat rec: recieve message from server\r\n\"");
 		return true;
 	}
 }
-//レシーブ関数
 
 Rec::Rec():buf(),n(0)
 {
-	setName("chat_r");
+	setName("chat");
 	setPriority(TASK_PRIORITY_REC, TASK_INTERVAL_REC);
 }
 
